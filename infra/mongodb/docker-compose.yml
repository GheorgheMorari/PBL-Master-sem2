services:
  mongodb:
    image: mongo:5.0.10
    container_name: mongodb-dev
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
    volumes:
      - mongodb-data:/data/db
#    ports:
#      - "27017:27017"
#    restart: unless-stopped
    networks:
      - mongo-net
      - public-net
    labels:
        #### Labels define the behavior and rules of the traefik proxy for this container ####
        - "traefik.enable=true" # <== Enable traefik to proxy this container
#        - "traefik.tcp.routers.mongo.rule=HostSNI(`mongo.${DOMAIN}`)" # <== use with TLS and SSL enable for mongo
#        - "traefik.tcp.routers.mongo.tls=true" # <== Defining the entrypoint for http, **ref: line 30
#        - "traefik.tcp.routers.mongo.tls.certresolver=mytlschallenge" # <== Defining certsresolvers for https
        - "traefik.tcp.routers.mongo.rule=HostSNI(`*`)" # <== Work around for non-TLS and SSL enable for mongo
#        - "traefik.tcp.routers.mongo.tls=true" # <== Work around for non-TLS and SSL enable for mongo
        - "traefik.tcp.routers.mongo.entrypoints=mongo" # <== This is a middleware to redirect to mongo
#        - "traefik.tcp.routers.mongo.middlewares=redirect@file" # <== This is a middleware to redirect to https
#        - "traefik.http.routers.mongo-secured.rule=Host(`mongo.${DOMAIN}`)" # <== Your Domain Name for the https rule
#        - "traefik.http.routers.mongo-secured.entrypoints=web-secured" # <== Defining entrypoint for https, **ref: line 31
#        - "traefik.http.routers.mongo-secured.tls.certresolver=mytlschallenge" # <== Defining certsresolvers for https
#        - "traefik.tcp.services.mongo.loadbalancer.server.port=27017" # <== Defining the port for the service

  mongo-express:
    image: mongo-express
    container_name: mongo-express-dev
    environment:
      - ME_CONFIG_MONGODB_SERVER=mongodb-dev
      - ME_CONFIG_MONGODB_ENABLE_ADMIN=${ME_CONFIG_MONGODB_ENABLE_ADMIN}
      - ME_CONFIG_MONGODB_ADMINUSERNAME=${ME_CONFIG_MONGODB_ADMINUSERNAME}
      - ME_CONFIG_MONGODB_ADMINPASSWORD=${ME_CONFIG_MONGODB_ADMINPASSWORD}
      - ME_CONFIG_BASICAUTH_USERNAME=${ME_CONFIG_BASICAUTH_USERNAME}
      - ME_CONFIG_BASICAUTH_PASSWORD=${ME_CONFIG_BASICAUTH_PASSWORD}
#    ports:
#      - "8081:8081"
    volumes:
      - mongodb-data:/data/db
    networks:
        - mongo-net
        - public-net
    depends_on:
      - mongodb
    healthcheck:
      test: wget --quiet --tries=3 --spider http://${ME_CONFIG_BASICAUTH_USERNAME}:${ME_CONFIG_BASICAUTH_PASSWORD}@mongo-express-dev:8081 || exit 1
      interval: 30s
      timeout: 10s
      retries: 3
#    restart: unless-stopped
    labels:
      #### Labels define the behavior and rules of the traefik proxy for this container ####
      - "traefik.enable=true" # <== Enable traefik to proxy this container
      - "traefik.http.routers.mongo-monitor.rule=Host(`mongo-monitor.${DOMAIN}`)" # <== Your Domain Name goes here for the http rule
      - "traefik.http.routers.mongo-monitor.entrypoints=web" # <== Defining the entrypoint for http, **ref: line 30
      - "traefik.http.routers.mongo-monitor.middlewares=redirect@file" # <== This is a middleware to redirect to https
      - "traefik.http.routers.mongo-monitor-secured.rule=Host(`mongo-monitor.${DOMAIN}`)" # <== Your Domain Name for the https rule
      - "traefik.http.routers.mongo-monitor-secured.entrypoints=web-secured" # <== Defining entrypoint for https, **ref: line 31
      - "traefik.http.routers.mongo-monitor-secured.tls.certresolver=mytlschallenge" # <== Defining certsresolvers for https

volumes:
  mongodb-data:
    name: mongodb-data-dev

networks:
    mongo-net:
        internal: false
    public-net:
        external: true
